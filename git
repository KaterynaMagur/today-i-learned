Git init  - ініціалізуємо гіт
Git add назвафайлу or git add .  (Щоб додати всі файли) - додати на стейдж для коміту
Git commit -m “назва коміту по зміні” (де -m дозволяє передати опис коміту)
Git log  - подивитись нещодавні коміти 
Git status  - подивитись, які файли затейджовані, а які не відслідковуються
Git diff  - подивитись на зміни в порівнянні з останнім комітом 
Git reset HEAD назвафайлу - забирає зі стейджа файл 
git reset commit_SHA - відміна коміту по його коду sha (first 7 characters)
Git checkout - пересування по гілкам
Git merge - злиття гілок
Git cherry-pick - додавання в гілку вибрані коміти з іншої і зміна їх порядку
Git rebase -I HEAD~2 - змінити порядок певної кількості комітів чи видалити щось 
Git commit —amend - внесення якихось незначних змін до останнього коміту
git clone - створю з гітхабу локальний репозиторій 
Origin - зазвийчай імя основного віддаленого репозиторію 
git fetch - витягнути інфо з віддаленого репозиторію
Git pull - витягує інфо з віддаленого репозиторію і мерджить з поточним 
Git push - використовується для надсилання локальних змін на вказаний віддалений репозиторій;
git pull --rebase - витягнути зміни з оріджин і злити їх, щоб потім запушити
git restore --staged foo.txt - забрати зі стейджа файл 

Робота з терміналом:

Ls - виводить папки в директорії. Ls -a - разом з невидимими папками
Touch foo.txt - створює файл foo.txt
Mkdir - створює директорію 
cp foo.txt bar.txt - створити копію файлу з новим ім’ям, де перше - імя файлу який копіюємо, а друге імя нового файлу
mv foo.txt ../foo-3.txt - переміщає файл на рівень вище і переназиває його
Cat назвафайлу - виводить на екран терміналу текст який в файлі 
